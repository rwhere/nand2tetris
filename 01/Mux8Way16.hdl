// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=nots0);
    Not(in=sel[1], out=nots1);
    Not(in=sel[2], out=nots2);
    And(a=nots2, b=nots1, out=i0i);
    And(a=i0i, b=nots0, out=i0);
    And(a=nots2, b=nots1, out=i1i);
    And(a=i1i, b=sel[0], out=i1);
    And(a=nots2, b=sel[1], out=i2i);
    And(a=i2i, b=nots0, out=i2);
    And(a=nots2, b=sel[1], out=i3i);
    And(a=i3i, b=sel[0], out=i3);
    And(a=sel[2], b=nots1, out=i4i);
    And(a=i4i, b=nots0, out=i4);
    And(a=sel[2], b=nots1, out=i5i);
    And(a=i5i, b=sel[0], out=i5);
    And(a=sel[2], b=sel[1], out=i6i);
    And(a=i6i, b=nots0, out=i6);
    And(a=sel[2], b=sel[1], out=i7i);
    And(a=i7i, b=sel[0], out=i7);
    And16(a=a, b[0]=i0, b[1]=i0, b[2]=i0, b[3]=i0, b[4]=i0, b[5]=i0, b[6]=i0, b[7]=i0, b[8]=i0,
    b[9]=i0, b[10]=i0, b[11]=i0, b[12]=i0, b[13]=i0, b[14]=i0, b[15]=i0, out=aout);
    And16(a=b, b[0]=i1, b[1]=i1, b[2]=i1, b[3]=i1, b[4]=i1, b[5]=i1, b[6]=i1, b[7]=i1, b[8]=i1,
    b[9]=i1, b[10]=i1, b[11]=i1, b[12]=i1, b[13]=i1, b[14]=i1, b[15]=i1, out=bout);
    And16(a=c, b[0]=i2, b[1]=i2, b[2]=i2, b[3]=i2, b[4]=i2, b[5]=i2, b[6]=i2, b[7]=i2, b[8]=i2,
    b[9]=i2, b[10]=i2, b[11]=i2, b[12]=i2, b[13]=i2, b[14]=i2, b[15]=i2, out=cout);
    And16(a=d, b[0]=i3, b[1]=i3, b[2]=i3, b[3]=i3, b[4]=i3, b[5]=i3, b[6]=i3, b[7]=i3, b[8]=i3,
    b[9]=i3, b[10]=i3, b[11]=i3, b[12]=i3, b[13]=i3, b[14]=i3, b[15]=i3, out=dout);
    And16(a=e, b[0]=i4, b[1]=i4, b[2]=i4, b[3]=i4, b[4]=i4, b[5]=i4, b[6]=i4, b[7]=i4, b[8]=i4,
    b[9]=i4, b[10]=i4, b[11]=i4, b[12]=i4, b[13]=i4, b[14]=i4, b[15]=i4, out=eout);
    And16(a=f, b[0]=i5, b[1]=i5, b[2]=i5, b[3]=i5, b[4]=i5, b[5]=i5, b[6]=i5, b[7]=i5, b[8]=i5,
    b[9]=i5, b[10]=i5, b[11]=i5, b[12]=i5, b[13]=i5, b[14]=i5, b[15]=i5, out=fout);
    And16(a=g, b[0]=i6, b[1]=i6, b[2]=i6, b[3]=i6, b[4]=i6, b[5]=i6, b[6]=i6, b[7]=i6, b[8]=i6,
    b[9]=i6, b[10]=i6, b[11]=i6, b[12]=i6, b[13]=i6, b[14]=i6, b[15]=i6, out=gout);
    And16(a=h, b[0]=i7, b[1]=i7, b[2]=i7, b[3]=i7, b[4]=i7, b[5]=i7, b[6]=i7, b[7]=i7, b[8]=i7,
    b[9]=i7, b[10]=i7, b[11]=i7, b[12]=i7, b[13]=i7, b[14]=i7, b[15]=i7, out=hout);
    Or16(a=aout, b=bout, out=r1);
    Or16(a=cout, b=dout, out=r2);
    Or16(a=eout, b=fout, out=r3);
    Or16(a=gout, b=hout, out=r4);
    Or16(a=r1, b=r2, out=r5);
    Or16(a=r3, b=r4, out=r6);
    Or16(a=r5, b=r6, out=out);
}